#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# AnPyLar documentation build configuration file, created by
# sphinx-quickstart on Thu Nov 16 21:52:35 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# sys.path.insert(0, os.path.abspath('.'))

import os.path
import sys

sys.path.insert(0, os.path.abspath('../../anpylar'))
sys.path.insert(0, os.path.abspath('../brython'))
if True:  # pep-8 warning avoidance
    import browser  # trigger brython/browser documentation noops for anpylar

    # Autodoc hack for observable_operators/sources to correctly show
    # parameters and docstrings with the proper usage name
    import collections
    from inspect import signature
    import types

    from anpylar import Observable
    import anpylar.observable_sources

    add_module_names = False

    # Document observable operators
    obs = {}
    for opname, cls in Observable._dynamicmethods.items():
        def funcx():
            pass

        s = signature(cls.__init__)
        newparams = list(s.parameters.values())[1:]
        funcx.__signature__ = s.replace(parameters=newparams)
        funcx.__doc__ = cls.__doc__
        obs[opname] = funcx

    obsops = types.ModuleType('obs_ops', 'Observable Operators')
    obsops.__dict__.update(obs)
    sys.modules['anpylar.obs_ops'] = obsops

    # Document observable sources
    obs = {}
    for srcname in Observable._staticmethods:
        def funcx():
            pass

        recapname = '_'.join(x.capitalize() for x in srcname.split('_'))
        name = recapname + '_Source'
        cls = getattr(anpylar.observable_sources, name)

        s = signature(cls.__init__)
        newparams = list(s.parameters.values())[1:]
        funcx.__signature__ = s.replace(parameters=newparams)
        funcx.__doc__ = cls.__doc__
        obs[srcname] = funcx

    obssrc = types.ModuleType('obs_src', 'Observable Sources')
    obssrc.__dict__.update(obs)
    sys.modules['anpylar.obs_src'] = obssrc


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

def setup(app):
    app.add_stylesheet('css/custom.css')  # may also be an URL

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.todo',
    'sphinx_tabs.tabs',
    # 'sphinxcontrib.images',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'AnPyLar'
copyright = '2018 The AnPyLar Team'
author = 'AnPyLar'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '1.1.4'
# The full version, including alpha/beta/rc tags.
release = ''

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = 'alabaster'
html_theme = 'sphinx_rtd_theme'
html_show_sourcelink = True
html_show_sphinx = False

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    'navigation_depth': 3,
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'AnPyLardoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'AnPyLar.tex', 'AnPyLar Documentation',
     'AnPyLar', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'anpylar', 'AnPyLar Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'AnPyLar', 'AnPyLar Documentation',
     author, 'AnPyLar', 'One line description of project.',
     'Miscellaneous'),
]

images_config = {
    'default_image_width': 'auto',
}
